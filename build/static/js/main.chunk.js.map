{"version":3,"sources":["jiraApiUtls.js","index.js"],"names":["makeJiraApiRequest","a","method","requestPath","body","fetch","headers","JSON","stringify","response","json","makeJqlRequest","jql","fields","resultPropertyPath","maxResults","startAt","allResultsReturned","totalNumberOfResults","total","concat","_","get","console","log","length","getIssuesForKeys","keys","join","issueData","getIssuesLinkedToEpics","epicKeys","IssueType","EPIC","STORY","SPIKE","BUG","Object","freeze","ISSUE_TYPE_FIELD_ID","STATUS_FIELD_ID","STORY_POINTS_FIELD_ID","PAIR_ASSIGNEE_FIELD_ID","EPIC_LINK_FIELD_ID","getDescendantIssueCards","issueCardsAncestorEl","querySelectorAll","getIssueType","issue","issuetype","name","getIssueKey","key","getIssuesOfType","issues","issueType","filter","getEpicLinkedIssuesMap","epicLinkedIssuesMap","Map","map","linkedEpicKey","getLinkedEpicKey","linkedIssues","set","getIssueKeys","getIssueDataMap","issueCardsMap","issueDataMap","issueKey","issueCard","handleMutation","descendantIssueCards","issueCardsThatNeedModificationMap","getMapOfIssueCardsThatNeedModification","size","issuesLinkedToEpics","forEach","applyBaseCardModifications","modifyEpicCard","includes","modifyStoryOrSpikeCard","modifyBugCard","linkedIssuesSummary","getIssuesSummary","addEstimatesSummaryField","addStoriesOrSpikesCompletedSummaryField","addStoryPointsSummaryField","addBugsSummaryField","totalNumberOfStoriesOrSpikes","numberOfStoriesOrSpikesWithEstimates","colorizeCard","numberOfBugsClosed","totalNumberOfBugs","content","addExtraField","storyPointsCompleted","totalStoryPoints","numberOfStoriesOrSpikesCompleted","isClosed","status","getStatus","defaultIssuesSummary","reduce","issuesSummary","storyPoints","getStoryPoints","isStoryOrSpike","isBug","addDaysInColumnExtraField","getDaysInColumn","addOrModifyStoryPointsField","color","setAttribute","fieldId","tooltip","querySelector","extraFieldsDiv","insertAdjacentHTML","storyPointsSpan","textContent","daysInColumn","issueCards","getAttribute","isIssueCardModifiedByExtension","getIssueCardKey","replace","observer","MutationObserver","mutations","mutation","id","target","classAttr","document","observe","childList","subtree"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["import _ from 'lodash';\n\n/**\n * Issue a generic Jira API request\n * @param {*} param0 \n * @returns \n */\nexport const makeJiraApiRequest = async (\n  {\n    method='POST',\n    requestPath= \"\",\n    body\n  }\n) => {\n  const BASE_JIRA_API_PATH = '/rest/api/2';\n\n  const response = await fetch(\n    `${BASE_JIRA_API_PATH}/${requestPath}`,\n    {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    }\n  );\n\n  return await response?.json();\n}\n\n/**\n * JQL Request \n * Returns full depaginated results\n * \n * @param {*} param0 \n * @returns \n */\nexport const makeJqlRequest = async (\n  {\n    jql,\n    fields = [],\n    resultPropertyPath = \"issues\",\n    maxResults = 50\n  }\n) => {\n  var startAt = 0;\n  var allResultsReturned = []\n  var totalNumberOfResults = 0;\n\n  do {\n    const response = await makeJiraApiRequest(\n      {\n        requestPath: \"search\",\n        body: {\n          jql,\n          fields,\n          startAt,\n          maxResults\n        }\n      }\n    );\n    \n    totalNumberOfResults = response?.total;\n    allResultsReturned = \n      allResultsReturned.concat(\n        _.get(response, resultPropertyPath, [])\n      );\n    console.log(`Got ${allResultsReturned.length} of ${totalNumberOfResults} results for jql ${jql}`);\n    startAt = allResultsReturned?.length;\n  }while(totalNumberOfResults>allResultsReturned.length);\n\n  return allResultsReturned;\n}\n\nexport const getIssuesLinkedToEpic = async (\n  {\n    epicKey,\n    fields = [\"key\",\"issuetype\", \"status\"]\n  }\n) => {\n  return await makeJqlRequest(\n    {\n      jql: `'Epic Link'=${epicKey}`,\n      fields\n    }\n  );\n}\n\nexport const getIssuesForKeys = async (keys, fields=[]) => {\n\n  if(!keys.length) {\n    return [];\n  }\n  const jql = `key in (${keys.join()})`;\n  //const jql = `key in (DOPE-516)`;\n  console.log(`je: getIssuesForKeys: number of keys: ${keys?.length}}`);\n  console.log(`je: getIssuesForKeys: jql: ${jql}}`);\n\n  const issueData = await makeJqlRequest(\n    {\n      jql,\n      fields,\n      maxResults:5000\n    }\n  );\n\n  //getIssuesLinkedToEpicsconsole.log(`je: getIssuesForKeys: ${JSON.stringify(issueData, null, 2)}`);\n  console.log(`je: getIssuesForKeys: issueData.length: ${issueData.length}`);\n\n  return issueData;\n}\n\nexport const getIssuesLinkedToEpics = async (epicKeys, fields=[]) => {\n\n  if(!epicKeys.length) {\n    return [];\n  }\n  const jql = `'Epic Link' in (${epicKeys.join()})`;\n  console.log(`je: getIssuesLinkedToEpics: jql: ${jql}}`);\n\n  const issueData = await makeJqlRequest(\n    {\n      jql,\n      fields,\n      maxResults:5000\n    }\n  );\n\n  //console.log(`je: getIssuesLinkedToEpics: ${JSON.stringify(issueData, null, 2)}`);\n  console.log(`je: getIssuesLinkedToEpics: issueData.length: ${issueData.length}`);\n\n  return issueData;\n}\n\n\n\nexport const getIssueForKey = async (\n  {\n    issueKey, \n    fields = []\n  }\n) => {\n  console.log(`Got issue for key ${issueKey} pre`);\n  const result = await makeJqlRequest(\n    {\n      requestPath: \"search\",\n      body: {\n        jql:`'key'=${issueKey}`,\n        fields\n      }\n    }\n  );\n\n  //console.log(`Got issue for key ${issueKey} ${JSON.stringify(result, null, 2)}`);\n  return result;\n}","\nimport { isCompositeComponent } from 'react-dom/test-utils';\nimport {getIssuesForKeys, getIssuesLinkedToEpic, getIssuesLinkedToEpics} from './jiraApiUtls'\n\nconst IssueType = {\n  EPIC: 'Epic',\n  STORY: 'Story',\n  SPIKE: 'Spike',\n  BUG: 'Bug'\n};\nObject.freeze(IssueType);\n\n// Jira Field Ids\nconst KEY_FIELD_ID = \"key\";\nconst ISSUE_TYPE_FIELD_ID = \"issuetype\";\nconst STATUS_FIELD_ID = \"status\";\n\n\n// Jira Custom Field Ids\nconst STORY_POINTS_FIELD_ID = 'customfield_11901';\nconst PAIR_ASSIGNEE_FIELD_ID = 'customfield_14102';\nconst EPIC_LINK_FIELD_ID = 'customfield_10008';\n\n/**\n * Returns all issue cards that are descendents of the the specified ancestor el\n * \n * @param {*} issueCardsAncestorEl \n * @returns \n */\n const getDescendantIssueCards = issueCardsAncestorEl => {\n  return issueCardsAncestorEl.querySelectorAll(\"div[class*='js-detailview']\");\n}\n\n\nconst isIssueCardModifiedByExtension = (issueCard) => {\n  return issueCard?.getAttribute('modified-by-extension')\n}\n\nconst setIssueCardModifiedByExtension = (issueCard) => {\n  issueCard.setAttribute('modified-by-extension', 'true');\n}\n\nconst getIssueType = issue => {\n  return issue?.fields?.issuetype?.name;\n}\n\nconst getIssueKey = issue => {\n  return issue?.key;\n}\n\n/**\n * Returns all issues with the specified issue type\n * @param {*} issues \n * @param {*} issueType \n * @returns \n */\nconst getIssuesOfType = (issues, issueType) => {\n\n  return issues.filter(\n    issue => issueType === getIssueType(issue)\n  );\n  \n}\n\nconst getLinkedEpicKey = issue => {\n  return issue?.fields?.[EPIC_LINK_FIELD_ID];\n}\n\n/**\n * Gets a Map of issues with a key of Epic issue key and values of an Array of issues\n * linked to the epic \n * @param {*} issues \n */\nconst getEpicLinkedIssuesMap = issues => {\n  const epicLinkedIssuesMap = new Map();\n  issues.map(\n    issue => {\n      const linkedEpicKey = getLinkedEpicKey(issue);\n\n      if(linkedEpicKey) {\n        const linkedIssues = epicLinkedIssuesMap.get(linkedEpicKey)??[];\n        epicLinkedIssuesMap.set(linkedEpicKey, linkedIssues.concat(issue));\n      }\n    }\n  );\n\n  return epicLinkedIssuesMap;\n}\n\n/**\n * Gets the keys for the collection of issues\n * @param {*} issues \n * @returns \n */\nconst getIssueKeys = issues => {\n  return issues.map(\n    issue => getIssueKey(issue)\n  );\n}\n\nconst getIssueDataMap = (\n  issueCardsMap, \n  issues, \n  epicLinkedIssuesMap\n) => {\n  const issueDataMap = new Map();\n\n  issues.map(\n    issue => {\n      const issueKey =  getIssueKey(issue);\n      issueDataMap.set(\n        issueKey,\n        {\n          issueType: getIssueType(issue),\n          issue,\n          issueCard: issueCardsMap.get(issueKey),\n          linkedIssues: epicLinkedIssuesMap.get(issueKey)\n        }\n      );\n    }\n  );\n\n  return issueDataMap;\n}\n\n/**\n * Updates all issues that are descendents of issueAncestorEl\n * \n * @param {*} issueCardsAncestorEl \n * @returns \n */\nconst handleMutation = async issueCardsAncestorEl => {\n  const descendantIssueCards = getDescendantIssueCards(issueCardsAncestorEl);\n\n  if(!descendantIssueCards?.length) {\n    return;\n  }\n\n  console.log(`je: handleMutation: found ${descendantIssueCards.length} descendant cards`);\n  const issueCardsThatNeedModificationMap = getMapOfIssueCardsThatNeedModification(descendantIssueCards);\n\n  console.log(`je: handleMutation: found ${issueCardsThatNeedModificationMap.size} cards the need modification`);\n  \n  const issues = await getIssuesForKeys(\n    [...issueCardsThatNeedModificationMap.keys()], // Convert map iterator to Array\n    [\n      KEY_FIELD_ID,\n      ISSUE_TYPE_FIELD_ID, \n      STATUS_FIELD_ID,\n      STORY_POINTS_FIELD_ID,\n      PAIR_ASSIGNEE_FIELD_ID,\n      EPIC_LINK_FIELD_ID\n    ]\n  );\n\n  const issuesLinkedToEpics = await getIssuesLinkedToEpics(\n    getIssueKeys(getIssuesOfType(issues, IssueType.EPIC)),\n    [\n      KEY_FIELD_ID,\n      ISSUE_TYPE_FIELD_ID, \n      STATUS_FIELD_ID,\n      STORY_POINTS_FIELD_ID,\n      PAIR_ASSIGNEE_FIELD_ID,\n      EPIC_LINK_FIELD_ID\n    ]\n  );\n\n\n  //console.log(`je: handleMutation: found ${epicIssues.length} epics`);\n  console.log(`je: handleMutation: found ${issuesLinkedToEpics.length} issues linked to epics`);\n\n  console.log(`je: handleMutation: issueData.length: ${issues?.length}`);\n\n  const epicLinkedIssuesMap = getEpicLinkedIssuesMap(issues);\n\n  console.log(`je: handleMutation: found ${epicLinkedIssuesMap.size} epics linked to issues `);\n\n  const issueDataMap = getIssueDataMap(\n    issueCardsThatNeedModificationMap, \n    issues, \n    epicLinkedIssuesMap\n  );\n\n  console.log(`je: handleMutation: issueDataMap size ${issueDataMap.size}`);\n\n  issueDataMap.forEach(\n    (issueData, issueKey) => {\n      const issueType = issueData.issueType;\n      applyBaseCardModifications(issueData);\n\n      if (IssueType.EPIC === issueType) {        \n        modifyEpicCard(issueData);\n      } else if([IssueType.STORY, IssueType.SPIKE].includes(issueType)) {\n        console.log(`je: handleMutation: is story or spike`);\n        modifyStoryOrSpikeCard(issueData);\n        \n      } else if (IssueType.BUG === issueType) {\n        modifyBugCard(issueData);\n      }\n    }\n\n  );\n\n  \n  console.log(`je: handleMutation: issueData.length: ${issues?.length}`);\n\n}\n\nconst modifyEpicCard = ({issueCard, linkedIssues}) => {\n  \n  const linkedIssuesSummary = getIssuesSummary(linkedIssues);\n\n  addEstimatesSummaryField(\n    issueCard, \n    linkedIssuesSummary\n  );\n\n  addStoriesOrSpikesCompletedSummaryField(\n    issueCard, \n    linkedIssuesSummary\n  );\n\n  addStoryPointsSummaryField(\n    issueCard, \n    linkedIssuesSummary\n  );\n\n  addBugsSummaryField(\n    issueCard, \n    linkedIssuesSummary\n  );\n\n  if(\n    linkedIssuesSummary.totalNumberOfStoriesOrSpikes === 0 ||\n    linkedIssuesSummary.numberOfStoriesOrSpikesWithEstimates != \n      linkedIssuesSummary.totalNumberOfStoriesOrSpikes\n    ) {\n    colorizeCard(issueCard, 'BurlyWood');\n  } else {\n    colorizeCard(issueCard, 'MediumTurquoise');\n  }\n \n}\n\nconst isStoryOrSpike = issue => {\n  return [IssueType.STORY, IssueType.SPIKE].includes(getIssueType(issue));\n}\n\nconst isBug = issue => {\n  return getIssueType(issue) === `Bug`;\n}\n\nconst addBugsSummaryField = (\n  issueCard, \n  {\n    numberOfBugsClosed,\n    totalNumberOfBugs\n  } \n) => {\n  const content = `${numberOfBugsClosed} of ${totalNumberOfBugs} bugs closed`;\n  addExtraField(issueCard, \n    'epicBugsSummary', \n    content,\n    content);\n}\n\n\nconst addEstimatesSummaryField = (\n  issueCard, \n  {\n    numberOfStoriesOrSpikesWithEstimates,\n    totalNumberOfStoriesOrSpikes\n  } \n) => {\n  const content = \n    `${numberOfStoriesOrSpikesWithEstimates} of ${totalNumberOfStoriesOrSpikes} stories estimated`;\n  addExtraField(issueCard, \n    'epicEstimatesSummary', \n    content,\n    content);\n}\n\n\nconst addStoryPointsSummaryField = (issueCard, {storyPointsCompleted, totalStoryPoints}) => {\n  const content = `${storyPointsCompleted} of ${totalStoryPoints} points completed`;\n  addExtraField(issueCard, \n    'epicStoryPointsSummary', \n    content,\n    content);\n}\n\nconst addStoriesOrSpikesCompletedSummaryField = (\n  issueCard, \n  {\n    numberOfStoriesOrSpikesCompleted, \n    totalNumberOfStoriesOrSpikes\n  }\n) => {\n  const content = \n    `${numberOfStoriesOrSpikesCompleted} of ${totalNumberOfStoriesOrSpikes} stories  completed`;\n  addExtraField(issueCard, \n    'epicStoriesCompletedSummary', \n    content,\n    content);\n}\n\nconst getStatus = issue => {\n  return issue?.fields?.status?.name;\n}\n\nconst isClosed = issue => {\n  return getStatus(issue) === 'Closed';\n}\n\nconst getIssuesSummary = issues => {\n\n  const defaultIssuesSummary = {\n     totalNumberOfStoriesOrSpikes: 0,\n     numberOfStoriesOrSpikesWithEstimates:0,\n     numberOfStoriesOrSpikesCompleted:0,\n     totalStoryPoints:0,\n     storyPointsCompleted:0,\n     totalNumberOfBugs:0,\n     numberOfBugsClosed:0\n  };\n \n  return issues?.reduce(\n    (issuesSummary, issue) => {\n      const storyPoints = getStoryPoints(issue);\n\n      if(isStoryOrSpike(issue)) {\n        issuesSummary.totalNumberOfStoriesOrSpikes++;\n\n        if(storyPoints) {\n          issuesSummary.totalStoryPoints += storyPoints;        \n          issuesSummary.numberOfStoriesOrSpikesWithEstimates++;\n        \n          if(isClosed(issue)) {\n            issuesSummary.numberOfStoriesOrSpikesCompleted++;\n            issuesSummary.storyPointsCompleted += storyPoints;\n          }\n        }\n      } else if (isBug(issue)) {\n        issuesSummary.totalNumberOfBugs++;\n        if(isClosed(issue)) {\n          issuesSummary.numberOfBugsClosed++;\n        }\n      }\n\n      return issuesSummary;\n    },\n    defaultIssuesSummary\n  ) ?? defaultIssuesSummary;\n }\n\n\n\nconst getStoryPoints = issue => {\n  return issue?.fields?.[STORY_POINTS_FIELD_ID]??0;\n}\n\n\n\nconst applyBaseCardModifications = ({issueCard}) => {\n  addDaysInColumnExtraField(\n    getDaysInColumn(issueCard), issueCard\n  );\n}\n\nconst modifyStoryOrSpikeCard = ({issueCard, issue}) => {\n  const storyPoints = getStoryPoints(issue);\n\n  addOrModifyStoryPointsField( storyPoints, issueCard);\n\n  if(!storyPoints) {\n    colorizeCard(issueCard, 'Khaki');\n  } else {\n    colorizeCard(issueCard, 'PaleTurquoise');\n  }\n}\n\nconst modifyBugCard = ({issueCard}) => {\n  colorizeCard(issueCard, 'LightPink');\n}\n\n\nconst colorizeCard = (issueCard, color) => {\n  issueCard.setAttribute(\"style\", `background-color:${color};`);\n}\n\nconst addExtraField = (issueCard, fieldId, content, tooltip) => {\n  // If the extra field hasn't already been added\n  if(!issueCard.querySelector(`span[id='${fieldId}']`)) {\n    \n    // Get the extra fields section\n    const extraFieldsDiv = issueCard.querySelector(\"div[class='ghx-extra-fields']\");\n\n    if (extraFieldsDiv) {\n\n      extraFieldsDiv.insertAdjacentHTML(\n        'beforeend', \n        `<div class=\"ghx-extra-field-row\">\n          <span class=\"ghx-extra-field\" id=\"${fieldId}\" data-tooltip=\"${tooltip}\">\n            <span class=\"ghx-extra-field-content\">${content}</span>\n          </span>\n        </div>` \n      );\n    }\n  }\n}\n\nconst addOrModifyStoryPointsField = (storyPoints, issueCard) => {\n\n  console.log(`je: addOrModifyStoryPointsField`);\n  if(!issueCard.querySelector(\"span[id='labeledStoryPointsField']\")) {\n    const storyPointsSpan = issueCard.querySelector(\"span[data-tooltip*='Story Points:']\");\n\n    if(storyPointsSpan) {\n      storyPointsSpan.textContent = `${storyPoints} story points`;\n      storyPointsSpan.setAttribute(\"id\", \"labeledStoryPointsField\");\n      storyPointsSpan.setAttribute(\"data-tooltip\", `${storyPoints} story points`);\n    }\n  }\n}\n\nconst addDaysInColumnExtraField = (daysInColumn, issueCard) => {\n  addExtraField(\n    issueCard, \n    \"daysInColumnField\", \n    `${daysInColumn} days in column`,\n    `${daysInColumn} days in column`\n    );\n}\n\n\nconst getMapOfIssueCardsThatNeedModification = issueCards => {\n  const issueCardsThatNeedModificationMap = new Map();\n\n  console.log(`je: getMapOfIssueCardsThatNeedModification: found ${issueCards.length} descendant cards. type: ${typeof issueCards}`); \n\n  \n  issueCards?.forEach(\n    issueCard => {\n      if( !isIssueCardModifiedByExtension(issueCard)) {\n        issueCardsThatNeedModificationMap.set(\n          getIssueCardKey(issueCard),\n          issueCard\n        );\n      }\n    }\n  );\n\n  console.log(`je: getMapOfIssueCardsThatNeedModification: end`); \n  return issueCardsThatNeedModificationMap;\n}\n\n/**\n * Modifies all issues (if necessary) that are descendents of issueAncestorEl\n * \n * @param {*} issueCardsAncestorEl \n * @returns \n */\n/*\nconst updateIssueCards2 = async issueCardsAncestorEl => {\n  const issueCards = getIssueCards(issueCardsAncestorEl);\n\n\n  issueCards?.forEach(\n    async issue => {\n      if(!isIssueCardModifiedByExtension(issue)) {\n        injectJiraExtensionReactContainer(issue);\n        \n        addDaysInColumnField(issue);\n        addStoryPointsLabel(issue);    \n\n        const issueType = getIssueType(issue);\n\n        if(issueType === 'Epic') {\n          handleEpic(issue);\n        } else if(['Story', 'Spike'].includes(issueType)){\n          const storyPoints = getStoryPoints(issue);\n          console.log(`${storyPoints} points for issue ${getIssueKey(issue)}`);\n          if(storyPoints >0 ) {\n            markIssueAsReady(issue);\n          } \n          else {\n            markIssueNeedsAttention(issue);\n          }\n        } else if(['Bug'].includes(issueType)) {\n          issue.setAttribute(\"style\", \"background-color:LightPink;\" );\n        }\n      \n        //console.log(`found ghx-pool issue ${getIssueKey(issue)} ${getIssueType(issue)}`);\n        markIssueUpdated(issue);  \n      } else {\n        console.log(`Ignoring updated issue`);\n      }\n    }\n  );\n}\n*/\nconst markIssueNeedsAttention = (issue) => {\n  if(getIssueType(issue) === 'Epic') {\n    issue.setAttribute(\"style\", \"background-color:BurlyWood;\" );\n  } else {\n    issue.setAttribute(\"style\", \"background-color:Khaki;\" );\n  }\n}\n\nconst markIssueAsReady = (issue) => {\n  if(getIssueType(issue) === 'Epic') {\n    issue.setAttribute(\"style\", \"background-color:MediumTurquoise;\" );\n  } else {\n    issue.setAttribute(\"style\", \"background-color:PaleTurquoise;\" );\n  } \n}\n\nconst handleEpic = async epicIssue => {\n  const issueKey = getIssueKey(epicIssue);\n  console.log(`Handling Epic ${issueKey}`);\n\n  const issuesLinkedToEpic = await getIssuesLinkedToEpic(\n    {\n      epicKey: issueKey,\n      fields: [\"key\",\"issuetype\", \"status\", \"customfield_11901\"]\n    }\n  );\n\n  console.log(`Got ${issuesLinkedToEpic.length} issues for epic ${issueKey}`);\n  const epicIssuesSummary = issuesLinkedToEpic?.reduce(\n    (epicSummary, linkedIssue) => {\n      const status = linkedIssue?.fields?.status?.name;\n      const storyPoints = linkedIssue?.fields?.customfield_11901;\n      const issueType = linkedIssue?.fields?.issuetype.name;\n\n      if(['Story', 'Spike'].includes(issueType)) {\n        epicSummary.totalNumberOfStoriesOrSpikes++;\n        epicSummary.totalStoryPoints += storyPoints;\n\n        if(status === 'Closed') {\n          epicSummary.numberOfClosedStoriesOrSpikes++;\n          epicSummary.storyPointsCompleted += storyPoints;\n        }\n\n        if(storyPoints > 0) {\n          epicSummary.numberOfStoriesOrSpikesWithEstimates++;\n        }\n      } else if (['Bug'].includes(issueType)){\n        epicSummary.totalNumberOfBugs++;\n\n        if(status === 'Closed') {\n          epicSummary.numberOfBugsClosed++;\n        }\n      }\n      \n      console.log(`Reducing issue ${linkedIssue.key} (${status}) for epic ${issueKey}`);\n      return epicSummary;\n    }, \n    {\n      totalNumberOfStoriesOrSpikes: 0,\n      numberOfStoriesOrSpikesWithEstimates: 0,\n      numberOfClosedStoriesOrSpikes: 0,\n      totalNumberOfBugs: 0,\n      numberOfBugsClosed: 0,\n      totalStoryPoints: 0,\n      storyPointsCompleted: 0\n    } \n  )??{};\n  \n  addIssueField(epicIssue, \"issuesEstimated\", `${epicIssuesSummary?.numberOfStoriesOrSpikesWithEstimates} of ${epicIssuesSummary?.totalNumberOfStoriesOrSpikes} stories estimated`);\n  addIssueField(epicIssue, \"storiesCompleted\", `${epicIssuesSummary?.numberOfClosedStoriesOrSpikes} of ${epicIssuesSummary?.totalNumberOfStoriesOrSpikes} stories completed`);\n  addIssueField(epicIssue, \"storyPointsCompleted\", `${epicIssuesSummary?.storyPointsCompleted} of ${epicIssuesSummary?.totalStoryPoints} points completed`);\n  addIssueField(epicIssue, \"bugsClosed\", `${epicIssuesSummary?.numberOfBugsClosed} of ${epicIssuesSummary?.totalNumberOfBugs} bugs closed`);\n\n  // Remove story points field from Epic\n  epicIssue?.querySelector(\"span[id='labeledStoryPointsField']\")?.parentNode?.remove();\n\n  if(\n    epicIssuesSummary.numberOfStoriesOrSpikesWithEstimates === 0 \n    ||\n    (epicIssuesSummary.totalNumberOfStoriesOrSpikes != epicIssuesSummary.numberOfStoriesOrSpikesWithEstimates)\n    \n   ) {\n    markIssueNeedsAttention(epicIssue);\n  } else if (\n    epicIssuesSummary.numberOfStoriesOrSpikesWithEstimates > 0 &&\n    epicIssuesSummary.totalNumberOfStoriesOrSpikes === epicIssuesSummary.numberOfStoriesOrSpikesWithEstimates\n  ) {\n    markIssueAsReady(epicIssue);\n  }\n\n  //console.log(`ghx-pool response: Epic ${issueKey} has ${epicIssuesSummary.numberOfIssues} linked issues`);\n}\n\nconst addIssueField = (issue, fieldId, fieldValue )=> {\n  //console.log(`Adding field ${fieldId}`);\n  // If the daysInColumnField hasn't already been added\n  if(!issue.querySelector(`span[id='${fieldId}']`)) {\n    \n    // Get the extra fields section\n    const extraFieldsDiv = issue.querySelector(\"div[class='ghx-extra-fields']\");\n\n    if (extraFieldsDiv) {\n\n      extraFieldsDiv.insertAdjacentHTML(\n        'beforeend', \n        `<div class=\"ghx-extra-field-row\"><span class=\"ghx-extra-field\" id=\"${fieldId}\" data-tooltip=\"${fieldValue}\"><span class=\"ghx-extra-field-content\">${fieldValue}</span></span></div>` \n      );\n    }\n  }\n}\n\nconst getIssueCardKey = issueCard => {\n  return issueCard?.getAttribute(\"data-issue-key\");\n}\n\n/*\nconst getIssueType = issue => {\n  const issueType = issue?.querySelector(\"span[class='ghx-type']\")?.getAttribute(\"title\");\n  rseturn issueType;\n}*/\n\nconst getStoryPoints2 = issue => {\n  const storyPoints = \n    issue.querySelector(\"span[data-tooltip*='Story Points']\")?.\n    getAttribute(\"data-tooltip\")?.\n    replace(\"Story Points: \",\"\");\n\n    console.log(`${storyPoints} foo points for issue ${getIssueKey(issue)}`);\n  return parseFloat(storyPoints)??0.0;\n}\n\nconst addStoryPointsLabel = issue => {\n  //console.log(`Adding story points lable to issue ghx-pool issue`);\n\n  // If the daysInColumnField hasn't already been added\n  if(!issue.querySelector(\"span[id='labeledStoryPointsField']\")) {\n    const storyPointsSpan = issue.querySelector(\"span[data-tooltip*='Story Points:']\");\n\n    if(storyPointsSpan) {\n      const storyPoints = getStoryPoints(issue);\n      storyPointsSpan.textContent = `${storyPoints} story points`;\n      storyPointsSpan.setAttribute(\"id\", \"labeledStoryPointsField\");\n      //storyPointsSpan.setAttribute(\"data-tooltip\", `${storyPoints} story points`);\n    }\n  }\n}\n\nconst getDaysInColumn = issue => {\n  const daysInColumn = \n    issue.querySelector(\"div[class='ghx-days']\")?.\n    getAttribute(\"title\")?.\n    replace(\" days in this column\",\"\");\n\n  return daysInColumn??\"Unknown\"\n}\n\n\n\nconst addDaysInColumnField = issue => {\n  //console.log(`Adding days in columns to issue ghx-pool issue`);\n\n  // If the daysInColumnField hasn't already been added\n  if(!issue.querySelector(\"span[id='daysInColumnField']\")) {\n    \n    // Get the extra fields section\n    const extraFieldsDiv = issue.querySelector(\"div[class='ghx-extra-fields']\");\n\n    if (extraFieldsDiv) {\n\n      const daysInColumn = getDaysInColumn(issue);\n\n      extraFieldsDiv.insertAdjacentHTML(\n        'beforeend', \n        `<div class=\"ghx-extra-field-row\"><span class=\"ghx-extra-field\" id=\"daysInColumnField\" data-tooltip=\"${daysInColumn} days in column\"><span class=\"ghx-extra-field-content\">${daysInColumn} days in column</span></span></div>` \n      );\n    }\n  }\n}\n\n/**\n * Returns all issue cards that are descendents of the the specified ancestor el\n * \n * @param {*} issueCardsAncestorEl \n * @returns \n */\nconst getIssueCards = issueCardsAncestorEl => {\n  return issueCardsAncestorEl.querySelectorAll(\"div[class*='js-detailview']\");\n}\n\n/**\n * Observe mutations and update the board as necessary\n */\n const observer = new MutationObserver(\n  mutations => {  \n    mutations.map(\n      mutation => {\n        const id = mutation.target.getAttribute('id');\n        const classAttr = mutation.target.getAttribute('class');\n       \n        if(\n          id==='ghx-pool' ||\n          classAttr?.includes('ghx-column')\n        ) {\n          handleMutation(mutation.target);\n        }\n      }       \n    )\n  }    \n);\n\n\nconst target = document.querySelector(\"html\");\nconst config = { childList:true, subtree:true};\n\n/**\n * Observe all mutations to the DOM\n * TODO: Optimize this later if necessary\n */\n\nobserver.observe(target, config);"],"sourceRoot":""}