{"version":3,"sources":["jiraApiUtls.js","index.js"],"names":["makeJiraApiRequest","a","method","requestPath","body","fetch","headers","JSON","stringify","response","json","makeJqlRequest","jql","fields","resultPropertyPath","maxResults","startAt","allResultsReturned","totalNumberOfResults","total","concat","_","get","console","log","length","getIssuesForKeys","keys","join","issueData","getIssuesLinkedToEpics","epicKeys","IssueType","EPIC","STORY","SPIKE","BUG","Object","freeze","ISSUE_TYPE_FIELD_ID","STATUS_FIELD_ID","STORY_POINTS_FIELD_ID","PAIR_ASSIGNEE_FIELD_ID","EPIC_LINK_FIELD_ID","getDescendantIssueCards","issueCardsAncestorEl","querySelectorAll","getIssueType","issue","issuetype","name","getIssueKey","key","removeExtraField","issueCard","fieldName","fieldSpan","querySelector","fieldDiv","parentNode","removeChild","getIssuesOfType","issues","issueType","filter","getEpicLinkedIssuesMap","epicLinkedIssuesMap","Map","map","linkedEpicKey","getLinkedEpicKey","linkedIssues","set","getIssueKeys","getIssueDataMap","issueCardsMap","issueDataMap","issueKey","handleMutation","descendantIssueCards","issueCardsThatNeedModificationMap","getMapOfIssueCardsThatNeedModification","size","issuesLinkedToEpics","forEach","applyBaseCardModifications","modifyEpicCard","includes","modifyStoryOrSpikeCard","modifyBugCard","linkedIssuesSummary","getIssuesSummary","addEstimatesSummaryField","addStoriesOrSpikesCompletedSummaryField","addStoryPointsSummaryField","addBugsSummaryField","numberOfBugsClosed","totalNumberOfBugs","content","addExtraField","numberOfStoriesOrSpikesWithEstimates","totalNumberOfStoriesOrSpikes","storyPointsCompleted","totalStoryPoints","numberOfStoriesOrSpikesCompleted","isClosed","status","getStatus","defaultIssuesSummary","reduce","issuesSummary","storyPoints","getStoryPoints","isStoryOrSpike","isBug","pairAssignee","displayName","avatarUrl","avatarEl","text","insertAdjacentHTML","addPairAssigneeAvatar","pairAssigneeField","avatarUrls","getPairAssignee","colorizeCardToJiraColor","addDaysInColumnExtraField","getDaysInColumn","addLabeledStoryPointsField","jiraCardColor","getGrabberColor","colorizeCard","grabberStyle","getAttribute","replace","color","setAttribute","fieldId","tooltip","extraFieldsDiv","daysInColumn","issueCards","isIssueCardModifiedByExtension","setIssueCardModifiedByExtension","getIssueCardKey","pairAssigneeStyleApplied","observer","MutationObserver","mutations","mutation","id","target","classAttr","applyPairAssigneeStyle","document","observe","childList","subtree","sheet","createElement","innerHTML","pairAssigneeAvatarStyle","appendChild"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["import _ from 'lodash';\n\n/**\n * Issue a generic Jira API request\n * @param {*} param0 \n * @returns \n */\nexport const makeJiraApiRequest = async (\n  {\n    method='POST',\n    requestPath= \"\",\n    body\n  }\n) => {\n  const BASE_JIRA_API_PATH = '/rest/api/2';\n\n  const response = await fetch(\n    `${BASE_JIRA_API_PATH}/${requestPath}`,\n    {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    }\n  );\n\n  return await response?.json();\n}\n\n/**\n * JQL Request \n * Returns full depaginated results\n * \n * @param {*} param0 \n * @returns \n */\nexport const makeJqlRequest = async (\n  {\n    jql,\n    fields = [],\n    resultPropertyPath = \"issues\",\n    maxResults = 50\n  }\n) => {\n  var startAt = 0;\n  var allResultsReturned = []\n  var totalNumberOfResults = 0;\n\n  do {\n    const response = await makeJiraApiRequest(\n      {\n        requestPath: \"search\",\n        body: {\n          jql,\n          fields,\n          startAt,\n          maxResults\n        }\n      }\n    );\n    \n    totalNumberOfResults = response?.total;\n    allResultsReturned = \n      allResultsReturned.concat(\n        _.get(response, resultPropertyPath, [])\n      );\n    console.log(`je: Got ${allResultsReturned.length} of ${totalNumberOfResults} results for jql ${jql}`);\n    startAt = allResultsReturned?.length;\n  }while(totalNumberOfResults>allResultsReturned.length);\n\n  return allResultsReturned;\n}\n\nexport const getIssuesLinkedToEpic = async (\n  {\n    epicKey,\n    fields = [\"key\",\"issuetype\", \"status\"]\n  }\n) => {\n  return await makeJqlRequest(\n    {\n      jql: `'Epic Link'=${epicKey}`,\n      fields\n    }\n  );\n}\n\nexport const getIssuesForKeys = async (keys, fields=[]) => {\n\n  if(!keys.length) {\n    return [];\n  }\n  const jql = `key in (${keys.join()})`;\n  //const jql = `key in (DOPE-516)`;\n  console.log(`je: getIssuesForKeys: number of keys: ${keys?.length}}`);\n  console.log(`je: getIssuesForKeys: jql: ${jql}}`);\n\n  const issueData = await makeJqlRequest(\n    {\n      jql,\n      fields,\n      maxResults:5000\n    }\n  );\n\n  //console.log(`je: getIssuesForKeys: ${JSON.stringify(issueData, null, 2)}`);\n  console.log(`je: getIssuesForKeys: issueData.length: ${issueData.length}`);\n\n  return issueData;\n}\n\nexport const getIssuesLinkedToEpics = async (epicKeys, fields=[]) => {\n\n  if(!epicKeys.length) {\n    return [];\n  }\n  const jql = `'Epic Link' in (${epicKeys.join()})`;\n  console.log(`je: getIssuesLinkedToEpics: jql: ${jql}}`);\n\n  const issueData = await makeJqlRequest(\n    {\n      jql,\n      fields,\n      maxResults:5000\n    }\n  );\n\n  //console.log(`je: getIssuesLinkedToEpics: ${JSON.stringify(issueData, null, 2)}`);\n  console.log(`je: getIssuesLinkedToEpics: issueData.length: ${issueData.length}`);\n\n  return issueData;\n}\n\n\n\nexport const getIssueForKey = async (\n  {\n    issueKey, \n    fields = []\n  }\n) => {\n  console.log(`Got issue for key ${issueKey} pre`);\n  const result = await makeJqlRequest(\n    {\n      requestPath: \"search\",\n      body: {\n        jql:`'key'=${issueKey}`,\n        fields\n      }\n    }\n  );\n\n  return result;\n}","\nimport {getIssuesForKeys, getIssuesLinkedToEpics} from './jiraApiUtls'\n\nconst IssueType = {\n  EPIC: 'Epic',\n  STORY: 'Story',\n  SPIKE: 'Spike',\n  BUG: 'Bug'\n};\nObject.freeze(IssueType);\n\n// Jira Field Ids\nconst KEY_FIELD_ID = \"key\";\nconst ISSUE_TYPE_FIELD_ID = \"issuetype\";\nconst STATUS_FIELD_ID = \"status\";\n\n\n// Jira Custom Field Ids\nconst STORY_POINTS_FIELD_ID = 'customfield_11901';\nconst PAIR_ASSIGNEE_FIELD_ID = 'customfield_14102';\nconst EPIC_LINK_FIELD_ID = 'customfield_10008';\n\n/**\n * Returns all issue cards that are descendents of the the specified ancestor el\n * \n * @param {*} issueCardsAncestorEl \n * @returns \n */\n const getDescendantIssueCards = issueCardsAncestorEl => {\n  return issueCardsAncestorEl.querySelectorAll(\"div[class*='js-detailview']\");\n}\n\n\nconst isIssueCardModifiedByExtension = (issueCard) => {\n  return issueCard?.getAttribute('modified-by-extension')\n}\n\nconst setIssueCardModifiedByExtension = (issueCard) => {\n  issueCard.setAttribute('modified-by-extension', 'true');\n}\n\nconst getIssueType = issue => {\n  return issue?.fields?.issuetype?.name;\n}\n\nconst getIssueKey = issue => {\n  return issue?.key;\n}\n\nconst removeExtraField = (issueCard, fieldName) => {\n  const fieldSpan = issueCard.querySelector(`span[data-tooltip*='${fieldName}:']`);\n  const fieldDiv = fieldSpan?.parentNode;\n\n  fieldDiv?.parentNode?.removeChild(fieldDiv);\n\n\n}\n\n/**\n * Returns all issues with the specified issue type\n * @param {*} issues \n * @param {*} issueType \n * @returns \n */\nconst getIssuesOfType = (issues, issueType) => {\n\n  return issues.filter(\n    issue => issueType === getIssueType(issue)\n  );\n  \n}\n\nconst getLinkedEpicKey = issue => {\n  return issue?.fields?.[EPIC_LINK_FIELD_ID];\n}\n\n/**\n * Gets a Map of issues with a key of Epic issue key and values of an Array of issues\n * linked to the epic \n * @param {*} issues \n */\nconst getEpicLinkedIssuesMap = issues => {\n  const epicLinkedIssuesMap = new Map();\n  issues.map(\n    issue => {\n      const linkedEpicKey = getLinkedEpicKey(issue);\n\n      if(linkedEpicKey) {\n        const linkedIssues = epicLinkedIssuesMap.get(linkedEpicKey)??[];\n        epicLinkedIssuesMap.set(linkedEpicKey, linkedIssues.concat(issue));\n      }\n    }\n  );\n\n  return epicLinkedIssuesMap;\n}\n\n/**\n * Gets the keys for the collection of issues\n * @param {*} issues \n * @returns \n */\nconst getIssueKeys = issues => {\n  return issues.map(\n    issue => getIssueKey(issue)\n  );\n}\n\nconst getIssueDataMap = (\n  issueCardsMap, \n  issues, \n  epicLinkedIssuesMap\n) => {\n  const issueDataMap = new Map();\n\n  issues.map(\n    issue => {\n      const issueKey =  getIssueKey(issue);\n      issueDataMap.set(\n        issueKey,\n        {\n          issueType: getIssueType(issue),\n          issue,\n          issueCard: issueCardsMap.get(issueKey),\n          linkedIssues: epicLinkedIssuesMap.get(issueKey)\n        }\n      );\n    }\n  );\n\n  return issueDataMap;\n}\n\n/**\n * Updates all issues that are descendents of issueAncestorEl\n * \n * @param {*} issueCardsAncestorEl \n * @returns \n */\nconst handleMutation = async issueCardsAncestorEl => {\n  const descendantIssueCards = getDescendantIssueCards(issueCardsAncestorEl);\n\n  if(!descendantIssueCards?.length) {\n    return;\n  }\n\n  console.log(`je: handleMutation: found ${descendantIssueCards.length} descendant cards`);\n  const issueCardsThatNeedModificationMap = getMapOfIssueCardsThatNeedModification(descendantIssueCards);\n\n  console.log(`je: handleMutation: found ${issueCardsThatNeedModificationMap.size} cards the need modification`);\n  \n  const issues = await getIssuesForKeys(\n    [...issueCardsThatNeedModificationMap.keys()], // Convert map iterator to Array\n    [\n      KEY_FIELD_ID,\n      ISSUE_TYPE_FIELD_ID, \n      STATUS_FIELD_ID,\n      STORY_POINTS_FIELD_ID,\n      PAIR_ASSIGNEE_FIELD_ID,\n      EPIC_LINK_FIELD_ID\n    ]\n  );\n\n  const issuesLinkedToEpics = await getIssuesLinkedToEpics(\n    getIssueKeys(getIssuesOfType(issues, IssueType.EPIC)),\n    [\n      KEY_FIELD_ID,\n      ISSUE_TYPE_FIELD_ID, \n      STATUS_FIELD_ID,\n      STORY_POINTS_FIELD_ID,\n      PAIR_ASSIGNEE_FIELD_ID,\n      EPIC_LINK_FIELD_ID\n    ]\n  );\n\n\n  //console.log(`je: handleMutation: found ${epicIssues.length} epics`);\n  console.log(`je: handleMutation: found ${issuesLinkedToEpics.length} issues linked to epics`);\n\n  console.log(`je: handleMutation: issueData.length: ${issues?.length}`);\n\n  const epicLinkedIssuesMap = getEpicLinkedIssuesMap(issues);\n\n  console.log(`je: handleMutation: found ${epicLinkedIssuesMap.size} epics linked to issues `);\n\n  const issueDataMap = getIssueDataMap(\n    issueCardsThatNeedModificationMap, \n    issues, \n    epicLinkedIssuesMap\n  );\n\n  console.log(`je: handleMutation: issueDataMap size ${issueDataMap.size}`);\n\n  issueDataMap.forEach(\n    (issueData, issueKey) => {\n      const issueType = issueData.issueType;\n\n      // console.log(`Issue data foo: ${JSON.stringify(issueData, null, 2)}`);\n      applyBaseCardModifications(issueData);\n\n      if (IssueType.EPIC === issueType) {        \n        modifyEpicCard(issueData);\n      } else if([IssueType.STORY, IssueType.SPIKE].includes(issueType)) {\n        console.log(`je: handleMutation: is story or spike`);\n        modifyStoryOrSpikeCard(issueData);\n        \n      } else if (IssueType.BUG === issueType) {\n        modifyBugCard(issueData);\n      }\n    }\n\n  );\n\n  \n  console.log(`je: handleMutation: issueData.length: ${issues?.length}`);\n\n}\n\nconst modifyEpicCard = ({issueCard, linkedIssues}) => {\n  \n  const linkedIssuesSummary = getIssuesSummary(linkedIssues);\n\n  addEstimatesSummaryField(\n    issueCard, \n    linkedIssuesSummary\n  );\n\n  addStoriesOrSpikesCompletedSummaryField(\n    issueCard, \n    linkedIssuesSummary\n  );\n\n  addStoryPointsSummaryField(\n    issueCard, \n    linkedIssuesSummary\n  );\n\n  addBugsSummaryField(\n    issueCard, \n    linkedIssuesSummary\n  );\n\n  \n}\n\nconst isStoryOrSpike = issue => {\n  return [IssueType.STORY, IssueType.SPIKE].includes(getIssueType(issue));\n}\n\nconst isBug = issue => {\n  return getIssueType(issue) === `Bug`;\n}\n\nconst addBugsSummaryField = (\n  issueCard, \n  {\n    numberOfBugsClosed,\n    totalNumberOfBugs\n  } \n) => {\n  const content = `${numberOfBugsClosed} of ${totalNumberOfBugs} bugs closed`;\n  addExtraField(issueCard, \n    'epicBugsSummary', \n    content,\n    content);\n}\n\n\nconst addEstimatesSummaryField = (\n  issueCard, \n  {\n    numberOfStoriesOrSpikesWithEstimates,\n    totalNumberOfStoriesOrSpikes\n  } \n) => {\n  const content = \n    `${numberOfStoriesOrSpikesWithEstimates} of ${totalNumberOfStoriesOrSpikes} stories estimated`;\n  addExtraField(issueCard, \n    'epicEstimatesSummary', \n    content,\n    content);\n}\n\n\nconst addStoryPointsSummaryField = (issueCard, {storyPointsCompleted, totalStoryPoints}) => {\n  const content = `${storyPointsCompleted} of ${totalStoryPoints} points completed`;\n  addExtraField(issueCard, \n    'epicStoryPointsSummary', \n    content,\n    content);\n}\n\nconst addStoriesOrSpikesCompletedSummaryField = (\n  issueCard, \n  {\n    numberOfStoriesOrSpikesCompleted, \n    totalNumberOfStoriesOrSpikes\n  }\n) => {\n  const content = \n    `${numberOfStoriesOrSpikesCompleted} of ${totalNumberOfStoriesOrSpikes} stories  completed`;\n  addExtraField(issueCard, \n    'epicStoriesCompletedSummary', \n    content,\n    content);\n}\n\nconst getStatus = issue => {\n  return issue?.fields?.status?.name;\n}\n\nconst isClosed = issue => {\n  return getStatus(issue) === 'Closed';\n}\n\nconst getIssuesSummary = issues => {\n\n  const defaultIssuesSummary = {\n     totalNumberOfStoriesOrSpikes: 0,\n     numberOfStoriesOrSpikesWithEstimates:0,\n     numberOfStoriesOrSpikesCompleted:0,\n     totalStoryPoints:0,\n     storyPointsCompleted:0,\n     totalNumberOfBugs:0,\n     numberOfBugsClosed:0\n  };\n \n  return issues?.reduce(\n    (issuesSummary, issue) => {\n      const storyPoints = getStoryPoints(issue);\n\n      if(isStoryOrSpike(issue)) {\n        issuesSummary.totalNumberOfStoriesOrSpikes++;\n\n        if(storyPoints) {\n          issuesSummary.totalStoryPoints += storyPoints;        \n          issuesSummary.numberOfStoriesOrSpikesWithEstimates++;\n        \n          if(isClosed(issue)) {\n            issuesSummary.numberOfStoriesOrSpikesCompleted++;\n            issuesSummary.storyPointsCompleted += storyPoints;\n          }\n        }\n      } else if (isBug(issue)) {\n        issuesSummary.totalNumberOfBugs++;\n        if(isClosed(issue)) {\n          issuesSummary.numberOfBugsClosed++;\n        }\n      }\n\n      return issuesSummary;\n    },\n    defaultIssuesSummary\n  ) ?? defaultIssuesSummary;\n }\n\n\n\nconst getStoryPoints = issue => {\n  return issue?.fields?.[STORY_POINTS_FIELD_ID]??0;\n}\n\n\nconst addPairAssigneeAvatar = (issueCard, pairAssignee) => {\n\n  if(!pairAssignee) {\n    return;\n  }\n\n  const {displayName, avatarUrl} = pairAssignee;\n  const avatarEl = issueCard.querySelector(`div[class='ghx-avatar']`);\n\n  const text = `Pair Assignee: ${displayName}`;\n\n  avatarEl?.parentNode?.insertAdjacentHTML(\n    'beforeend', \n    `<div class=\"pair-assignee-avatar\">\n      <img src=${avatarUrl}\n      class=\"ghx-avatar-img\" alt=\"${text}\" data-tooltip=\"${text}\" original-title=\"\">\n    </div>` \n  );\n}\n\nconst getPairAssignee = issue => {\n  const pairAssigneeField = issue?.fields?.[PAIR_ASSIGNEE_FIELD_ID];\n\n  if(pairAssigneeField) {\n    return {\n      avatarUrl: pairAssigneeField?.avatarUrls['48x48'],\n      displayName: pairAssigneeField?.displayName\n    };\n  } else {\n    return null;\n  }\n}\n\n\nconst applyBaseCardModifications = ({issueCard, issue}) => {\n  \n  addPairAssigneeAvatar(issueCard, getPairAssignee(issue));\n\n  colorizeCardToJiraColor(issueCard); \n\n  removeExtraField(\n    issueCard,\n    'Story Points' \n  );\n\n  removeExtraField(\n    issueCard,\n    'Pair Assignee' \n  );\n  \n  addDaysInColumnExtraField(\n    getDaysInColumn(issueCard), issueCard\n  );\n}\n\nconst modifyStoryOrSpikeCard = ({issueCard, issue}) => {\n  const storyPoints = getStoryPoints(issue);\n\n  addLabeledStoryPointsField( issueCard, storyPoints);\n\n  \n\n}\n\nconst modifyBugCard = ({issueCard}) => {\n  // No-op at the moment\n}\n\n/**\n * Colorize the entire card to the Jira card grabber color\n * @param {*} issueCard \n */\nconst colorizeCardToJiraColor = issueCard => {\n  const jiraCardColor = getGrabberColor(issueCard);\n\n  if(jiraCardColor){\n    colorizeCard(\n      issueCard,\n      jiraCardColor\n    );\n  }\n}\n\nconst getGrabberColor = issueCard => {\n  const grabberStyle = issueCard?.querySelector(`div[class='ghx-grabber']`)?.getAttribute('style');\n\n  return grabberStyle?.replace('background-color:','')??null;\n}\n\n/*\n  inst labeledStoryPoints = `${storyPoints} story points`;\n  const content = storyPoints?labeledStoryPoints:`<b><i>${content}</i></b>`;\n  const tooltip = storyPoints?content:'Needs Estimate';\n  const style = storyPoints?'':'background-color:yellow';\n\n    */\n\nconst colorizeCard = (issueCard, color) => {\n  issueCard.setAttribute(\"style\", `background-color:${color};`);\n}\n\nconst addExtraField = (issueCard, fieldId, content, tooltip) => {\n  // If the extra field hasn't already been added\n  if(!issueCard.querySelector(`span[id='${fieldId}']`)) {\n    \n    // Get the extra fields section\n    const extraFieldsDiv = issueCard.querySelector(\"div[class='ghx-extra-fields']\");\n\n    if (extraFieldsDiv) {\n\n      extraFieldsDiv.insertAdjacentHTML(\n        'beforeend', \n        `<div class=\"ghx-extra-field-row\">\n          <span class=\"ghx-extra-field\" id=\"${fieldId}\" data-tooltip=\"${tooltip}\">\n            <span class=\"ghx-extra-field-content\">${content}</span>\n          </span>\n        </div>` \n      );\n    }\n  }\n}\n\nconst addLabeledStoryPointsField = (issueCard, storyPoints) => {\n\n  const content = `Story Points: ${storyPoints}`;\n  addExtraField(\n    issueCard, `labeledStoryPointsField`, content, content\n  );\n}\n\nconst addDaysInColumnExtraField = (daysInColumn, issueCard) => {\n  addExtraField(\n    issueCard, \n    \"daysInColumnField\", \n    `${daysInColumn} days in column`,\n    `${daysInColumn} days in column`\n    );\n}\n\n\nconst getMapOfIssueCardsThatNeedModification = issueCards => {\n  const issueCardsThatNeedModificationMap = new Map();\n\n  console.log(`je: getMapOfIssueCardsThatNeedModification: found ${issueCards.length} descendant cards. type: ${typeof issueCards}`); \n\n  \n  issueCards?.forEach(\n    issueCard => {\n      if( !isIssueCardModifiedByExtension(issueCard)) {\n        setIssueCardModifiedByExtension(issueCard);\n        issueCardsThatNeedModificationMap.set(\n          getIssueCardKey(issueCard),\n          issueCard\n        );\n      }\n    }\n  );\n\n  console.log(`je: getMapOfIssueCardsThatNeedModification: end`); \n  return issueCardsThatNeedModificationMap;\n}\n\nconst getIssueCardKey = issueCard => {\n  return issueCard?.getAttribute(\"data-issue-key\");\n}\n\nconst getDaysInColumn = issue => {\n  const daysInColumn = \n    issue.querySelector(\"div[class='ghx-days']\")?.\n    getAttribute(\"title\")?.\n    replace(\" days in this column\",\"\");\n\n  return daysInColumn??\"Unknown\"\n}\n\n\nvar pairAssigneeStyleApplied = false;\n\n/**\n * Observe mutations and update the board as necessary\n */\n const observer = new MutationObserver(\n  mutations => {  \n    mutations.map(\n      mutation => {\n        const id = mutation.target.getAttribute('id');\n        const classAttr = mutation.target.getAttribute('class');\n       \n        if(\n          id==='ghx-pool' ||\n          classAttr?.includes('ghx-column')\n        ) {\n          if(!pairAssigneeStyleApplied) {\n            \n            applyPairAssigneeStyle();\n            pairAssigneeStyleApplied= true;\n          }\n\n          handleMutation(mutation.target);\n        }\n      }       \n    )\n  }    \n);\n\n\nconst target = document.querySelector(\"html\");\nconst config = { childList:true, subtree:true};\n\n/**\n * Observe all mutations to the DOM\n * TODO: Optimize this later if necessary\n */\n\nobserver.observe(target, config);\n\n\nconst applyPairAssigneeStyle = () => {\n  const sheet = document.createElement('style')\n  sheet.innerHTML = pairAssigneeAvatarStyle;\n  document.body.appendChild(sheet);\n}\n\nconst pairAssigneeAvatarStyle = `\n.ghx-band-1 .ghx-issue .pair-assignee-avatar {\n  right: auto;\n  top: 65px;\n}\n\n.ghx-band-1 .ghx-issue .ghx-type, .ghx-band-1 .ghx-issue .ghx-flags, .ghx-band-1 .ghx-issue .pair-assignee-avatar {\n  left: 8px;\n}\n.ghx-issue.ghx-has-avatar .pair-assignee-avatar {\n  display: block;\n}\n.ghx-issue .pair-assignee-avatar{\n  display: none;\n  position: absolute;\n  right: 10px;\n  top: 50px;\n}\n.ghx-band-2 .ghx-issue .pair-assignee-avatar {\n  right: 5px;\n  top: 30px;\n}\n`;"],"sourceRoot":""}